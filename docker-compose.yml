#executar -> docker-compose up --build
version: '3'

services:
#  normativasdb:
#    image: postgres:10.1-alpine
#    container_name: normativasdb
#    networks:
#      - webnet
#    ports:
#      - 5432:5432
#    env_file:
#      - ./.env
#  normativasapp:
#    build: .
#    container_name: normativas_app
#    command:
#      - ./wait-for-postgres.sh
#      - normativasdb
#      - ${POSTGRES_USER}
#      - ${POSTGRES_PASSWORD}
#      - ./wait-for-elasticsearch.sh
#      - normativaselasticsearch
#      - "9200"
#      - ./app-entrypoint.sh
#      - ${SEED_DATABASES}
#      - ${POSTGRES_DB}
#    depends_on:
#      - normativasdb
#      - normativaselasticsearch
#      - normativasweb
#    networks:
#      - webnet
#    volumes:
#      - ./:/app
#      - ${UPLOAD_FOLDER}:/app/storage/app/public/uploads
#      - ${LOG_FOLDER}:/app/storage/logs

  normativaselasticsearch:
    build: ./elasticsearch
    container_name: normativaselasticsearch
    #restart: always
    environment:
      - discovery.type=single-node
      - "cluster.name=normativas"
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "discovery.zen.ping.unicast.hosts=normativaselasticsearch"
    ports:
      - 9200:9200
    volumes:
      - /tmp/elastic/data:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - webnet
#  normativasweb:
#    image: nginx:latest
#    container_name: normativasweb
#    ports:
#      - "5000:80"
#    volumes:
#      - ./:/app
#      - ./site.conf:/etc/nginx/conf.d/site.conf
#    depends_on:
#      - normativasphp
#    networks:
#      - webnet
#  normativasphp:
#    container_name: normativasphp
#    build: ./php
#    #    image: php:7.2-fpm
#    volumes:
#      - ./:/app
#      - ${UPLOAD_FOLDER}:/app/storage/app/public/uploads
#      - ${LOG_FOLDER}:/app/storage/logs
#    networks:
#      - webnet

networks:
  webnet:

